
#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MAX 100

int num = 0, anaNum = 0;
int colArr[MAX] = { 0 };
char* words[MAX];
char buffer[MAX];
char tmp[MAX][MAX];
char* ana[MAX][MAX];
char* tmpStr;

void Copy();
void ChangeChar();
void ChangeFinal();
void AnagramGroup();
void ColSort();
void RowSort();
int Max(int arr1, int arr2);

int main()
{
	while (scanf("%s", buffer))
	{
		if (strcmp(buffer, "EOF") == 0)
			break;

		words[num++] = strdup(buffer);
	}

	Copy();
	ChangeChar();
	ChangeFinal();
	AnagramGroup();
	ColSort();
	RowSort();

	for (int a = 0; a < anaNum; a++)
	{
		for (int i = 0; i < colArr[a]; i++)
		{
			printf("%s ", ana[a][i]);
		}

		printf("\n");
	}

	/*ana[0][0] = words[0];
	ana[0][1] = words[1];

	printf("%s\n", ana[0][0]);
	printf("%s\n", ana[0][1]);*/

	/*for (int i = 0; i < num; i++)
		printf("%s %s\n", words[i], &tmp[i]);*/

	/*for (int i = 0; i < num; i++)
	{
		printf("%s ", words[i]);

		if (i > 0 && strcmp(tmp[i], tmp[i+1]) != 0)
			printf("\n");
	}*/

	return 0;
}

void Copy()
{
	for (int size = 0; size < num; size++)
	{
		for (int i = 0; i < strlen(words[size]); i++)
		{
			tmp[size][i] = words[size][i];
		}
	}
}

void ChangeChar()
{
	char tmpChar;

	for (int size = 0; size < num; size++)
	{
		for (int i = strlen(tmp[size]) - 1; i >= 0; i--)
		{
			for (int j = 0; j < i; j++)
			{
				if (tmp[size][j] > tmp[size][i])
				{
					tmpChar = tmp[size][i];
					tmp[size][i] = tmp[size][j];
					tmp[size][j] = tmpChar;
				}
			}
		}
	}
}

void ChangeFinal()
{
	char tmpFinal[MAX];

	for (int i = num - 1; i >= 0; i--)
	{
		for (int j = 0; j < i; j++)
		{
			if (strcmp(tmp[j], tmp[i]) > 0)
			{
				strcpy(tmpFinal, tmp[i]);
				strcpy(tmp[i], tmp[j]);
				strcpy(tmp[j], tmpFinal);

				tmpStr = words[i];
				words[i] = words[j];
				words[j] = tmpStr;
			}
		}
	}
}

void AnagramGroup()
{
	int col = 0;

	for (int i = 0; i < num; i++)
	{
		if (strcmp(tmp[i], tmp[i + 1]) == 0)
		{
			ana[anaNum][col] = words[i];
			colArr[anaNum]++;
			col++;
		}

		else if (i < num - 1 && strcmp(tmp[i - 1], tmp[i]) == 0 && strcmp(tmp[i], tmp[i + 1]) != 0)
		{
			ana[anaNum][col] = words[i];
			colArr[anaNum]++;
			col++;
		}

		// 단어 1개
		if (i < num - 1 && strcmp(tmp[i - 1], tmp[i]) != 0 && strcmp(tmp[i], tmp[i + 1]) != 0)
		{
			ana[anaNum][col] = words[i];
			colArr[anaNum]++;
			col++;
		}

		// 맨끝에서 두개 같으면
		if (i == num - 1 && strcmp(tmp[i - 1], tmp[i]) == 0)
		{
			ana[anaNum][col] = words[i];
			colArr[anaNum]++;
			col++;
		}

		// 맨끝에서 두개 다르면
		if (i == num - 1 && strcmp(tmp[i - 1], tmp[i]) != 0)
		{
			anaNum++;
			col = 0;
			continue;
		}

		if (strcmp(tmp[i], tmp[i + 1]) != 0)
		{
			anaNum++;
			col = 0;
		}
	}
}

void ColSort()
{
	for (int a = 0; a < anaNum; a++)
	{
		for (int i = colArr[a] - 1; i >= 0; i--)
		{
			for (int j = 0; j < i; j++)
			{
				if (strcmp(ana[a][j], ana[a][i]) > 0)
				{
					tmpStr = ana[a][i];
					ana[a][i] = ana[a][j];
					ana[a][j] = tmpStr;
				}
			}
		}
	}
}

int Max(int arr1, int arr2)
{
	int index = arr1 >= arr2 ? arr1 : arr2;

	return index;
}

void RowSort()
{
	for (int i = anaNum - 1; i >= 0; i--)
	{
		for (int j = 0; j < i; j++)
		{
			if (strcmp(ana[j][0], ana[i][0]) > 0)
			{
				int max = Max(colArr[j], colArr[i]);

				for (int k = 0; k < max; k++)
				{
					tmpStr = ana[i][k];
					ana[i][k] = ana[j][k];
					ana[j][k] = tmpStr;
				}

				int temp = colArr[i];
				colArr[i] = colArr[j];
				colArr[j] = temp;
			}
		}
	}
}