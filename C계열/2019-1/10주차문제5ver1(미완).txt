
#pragma warning (disable : 4996)

#include <stdio.h>

#define MAX 100

int Checkypp(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX]);
int Checkxpp(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX]);
int Checkymm(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX]);
int Checkxmm(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX]);

int main()
{
	int n, num, x = 0, y = 0, i = 0, j = 0;
	int xCount = 0, yCount = 0;
	int plusArr[MAX][MAX] = { 0, }, minusArr[MAX][MAX] = { 0, };
	bool isInvalid;
	int xIndex = 0, yIndex = 0;
	int beforeX, beforeY;

	plusArr[0][0] = 1;

	while (1)
	{
		scanf("%d", &n);

		isInvalid = false;
		//====================================================================================================
		// y++
		if (n == 0)
		{
			scanf("%d", &num);

			if (Checkypp(num, xIndex, yIndex, plusArr, minusArr) == 1)
			{
				isInvalid = true;
				xIndex = beforeX;
				yIndex = beforeY;

				
			}

			else
			{
				for (int i = 0; i < num; i++)
				{
					yIndex++;

					if (yIndex >= 0)
					{
						plusArr[xIndex][yIndex] += 1;
					}

					else
					{
						minusArr[xIndex][-yIndex] += 1;
					}
				}
				
				beforeX = xIndex;
				beforeY = yIndex;
			}

			if (isInvalid == false)
				printf("%d %d\n", xIndex, yIndex);

			else
				printf("invalid move\n");
		}
		//====================================================================================================
		// x++
		else if (n == 1)
		{
			scanf("%d", &num);

			if (Checkxpp(num, xIndex, yIndex, plusArr, minusArr) == 1)
			{
				isInvalid = true;
				xIndex = beforeX;
				yIndex = beforeY;

				
			}

			else
			{
				for (int i = 0; i < num; i++)
				{
					xIndex++;

					if (xIndex >= 0)
					{
						plusArr[xIndex][yIndex] += 1;
					}

					else
					{
						minusArr[-xIndex][yIndex] += 1;
					}
				}

				beforeX = xIndex;
				beforeY = yIndex;
			}

			if (isInvalid == false)
				printf("%d %d\n", xIndex, yIndex);
			
			else
				printf("invalid move\n");
		}
		//====================================================================================================
		// y--
		else if (n == 2)
		{
			scanf("%d", &num);

			if (Checkymm(num, xIndex, yIndex, plusArr, minusArr) == 1)
			{
				isInvalid = true;
				xIndex = beforeX;
				yIndex = beforeY;

				
			}

			else
			{
				for (int i = num; i > 0; i--)
				{
					yIndex--;

					if (yIndex >= 0)
					{
						plusArr[xIndex][yIndex] += 1;
					}

					else
					{
						minusArr[xIndex][-yIndex] += 1;
					}
				}

				beforeX = xIndex;
				beforeY = yIndex;
			}

			if (isInvalid == false)
				printf("%d %d\n", xIndex, yIndex);

			else
				printf("invalid move\n");
		}
		//====================================================================================================
		// x--
		else if (n == 3)
		{
			scanf("%d", &num);

			if (Checkxmm(num, xIndex, yIndex, plusArr, minusArr) == 1)
			{
				isInvalid = true;
				xIndex = beforeX;
				yIndex = beforeY;

				
			}

			else
			{
				for (int i = num; i > 0; i--)
				{
					xIndex--;

					if (xIndex >= 0)
					{
						plusArr[xIndex][yIndex] += 1;
					}

					else
					{
						minusArr[-xIndex][yIndex] += 1;
					}
				}

				beforeX = xIndex;
				beforeY = yIndex;
			}

			if (isInvalid == false)
				printf("%d %d\n", xIndex, yIndex);

			else
				printf("invalid move\n");
		}
		//====================================================================================================
		// Á¾·á
		else if (n == -1)
		{
			scanf("%d", &num);

			if (num == -1)
				break;
		}
	}

	return 0;
}

int Checkypp(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX])
{
	for (int i = 0; i < num; i++)
	{
		yIndex++;

		if (yIndex >= 0)
		{
			plusArr[xIndex][yIndex] += 1;

			if (plusArr[xIndex][yIndex] > 1)
			{
				for (int j = i; j >= 0; j--)
				{
					plusArr[xIndex][yIndex] = 0;
					yIndex--;
				}
				return 1;
			}
		}

		else
		{
			minusArr[xIndex][-yIndex] += 1;

			if (minusArr[xIndex][-yIndex] > 1)
			{
				for (int j = i; j >= 0; j--)
				{
					plusArr[xIndex][-yIndex] = 0;
					yIndex--;
				}
				return 1;
			}
		}
	}

	return 0;
}

int Checkxpp(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX])
{
	for (int i = 0; i < num; i++)
	{
		xIndex++;

		if (xIndex >= 0)
		{
			plusArr[xIndex][yIndex] += 1;

			if (plusArr[xIndex][yIndex] > 1)
			{
				for (int j = i; j >= 0; j--)
				{
					plusArr[xIndex][yIndex] = 0;
					xIndex--;
				}
				return 1;
			}
		}

		else
		{
			minusArr[-xIndex][yIndex] += 1;

			if (minusArr[-xIndex][yIndex] > 1)
			{
				for (int j = i; j >= 0; j--)
				{
					plusArr[-xIndex][yIndex] = 0;
					xIndex--;
				}
				return 1;
			}
		}
	}

	return 0;
}

int Checkymm(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX])
{
	for (int i = num; i > 0; i--)
	{
		yIndex--;

		if (yIndex >= 0)
		{
			plusArr[xIndex][yIndex] += 1;

			if (plusArr[xIndex][yIndex] > 1)
			{
				for (int j = 0; j <= i; j++)
				{
					plusArr[xIndex][yIndex] = 0;
					yIndex++;
				}
				return 1;
			}
		}

		else
		{
			minusArr[xIndex][-yIndex] += 1;

			if (minusArr[xIndex][-yIndex] > 1)
			{
				for (int j = 0; j <= i; j++)
				{
					plusArr[xIndex][-yIndex] = 0;
					yIndex++;
				}
				return 1;
			}
		}
	}

	return 0;
}

int Checkxmm(int num, int xIndex, int yIndex, int plusArr[MAX][MAX], int minusArr[MAX][MAX])
{
	for (int i = num; i > 0; i--)
	{
		xIndex--;

		if (xIndex >= 0)
		{
			plusArr[xIndex][yIndex] += 1;

			if (plusArr[xIndex][yIndex] > 1)
			{
				for (int j = 0; j <= i; j++)
				{
					plusArr[xIndex][yIndex] = 0;
					xIndex++;
				}
				return 1;
			}
		}

		else
		{
			minusArr[-xIndex][yIndex] += 1;

			if (minusArr[-xIndex][yIndex] > 1)
			{
				for (int j = 0; j <= i; j++)
				{
					plusArr[-xIndex][yIndex] = 0;
					xIndex++;
				}
				return 1;
			}
		}
	}

	return 0;
}
