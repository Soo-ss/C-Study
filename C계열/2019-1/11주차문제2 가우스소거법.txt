
#pragma warning (disable : 4996)

#include <stdio.h>

#define MAX 100

void Gauss(int a, int n, double arr[MAX][MAX]);
void Swap(int a, int n, double arr[MAX][MAX]);

int main()
{
	double arr[MAX][MAX];
	int result[MAX], n, infiniteSolCount = 0, noSolCount = 0;

	FILE *fp = fopen("DATA.txt", "r");

	fscanf(fp, "%d", &n);

	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n + 1; j++)
		{
			fscanf(fp, "%lf", &arr[i][j]);
		}
	}

	// 1행 1열이 되도록이면 1이오는게 좋다.
	for (int i = 1; i < n; i++)
	{
		if (arr[0][0] != 1)
		{
			Swap(i, n, arr);
		}
	}

	for (int i = 1; i < n; i++)
	{
		Gauss(i, n, arr);
	}

	for (int i = 0; i < n + 1; i++)
	{
		if (arr[n - 1][i] == 0)
			infiniteSolCount++;
	}

	for (int i = 0; i < n; i++)
	{
		if (arr[n - 1][i] == 0)
			noSolCount++;
	}

	for (int i = 0; i < n; i++)
	{
		double temp = 0;

		// 뒤에서부터 계산.(후진대입법)
		// 해당 미지수값 (ex. result[2] = x3)을 제외한 나머지 항을 오른쪽으로 이항한다.
		for (int j = 0; j < n; j++)
		{
			// 해당 미지수값을 건너뛴다.
			if (j != n - 1 - i)
				temp += arr[n - 1 - i][j] * result[j];
		}

		// 이항한값을 빼주고 마지막에 해당 미지수값의 계수를 나눠준다.
		result[n - 1 - i] = (arr[n - 1 - i][n] - temp) / arr[n - 1 - i][n - 1 - i];
	}

	if (infiniteSolCount == n + 1)
		printf("Infinite solution\n");

	else if (noSolCount == n && arr[n - 1][n] != 0)
		printf("No solution\n");

	else
	{
		for (int i = 0; i < n; i++)
		{
			printf("x%d = %d\n", i + 1, result[i]);
		}
	}

	return 0;
}

void Gauss(int a, int n, double arr[MAX][MAX])
{
	int num = a;

	for (int i = a; i < n; i++)
	{
		double multiplyNum = arr[i][num - 1] / arr[num - 1][num - 1];

		for (int j = 0; j < n + 1; j++)
		{
			arr[i][j] += arr[num - 1][j] * -multiplyNum;
		}
	}
}

void Swap(int a, int n, double arr[MAX][MAX])
{
	for (int i = 0; i < n + 1; i++)
	{
		double temp = arr[0][i];
		arr[0][i] = arr[a][i];
		arr[a][i] = temp;
	}
}
